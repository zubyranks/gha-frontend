name: Build and Push Golang Image to AWS ECR.
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Set the tag version'
        required: true 
        type: string

jobs:
  build-and-push:
    env:
      aws-region: us-east-1
      ecr_repository: gha-getupside
    permissions:
      id-token: write   # This is required for requesting the JWT
      contents: read    # This is required for actions/checkout

    name: Build and Push to ECR.
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: arn:aws:iam::${{ secrets.ACCOUNT_NUMBER }}:role/gha-frontend-role-auth
        aws-region: ${{ env.aws-region }}

    - name: Login to Amazon ECR.
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      uses: whoan/docker-build-with-cache-action@fix-yaml-parsing
      with:
        username: ${{ secrets.AWS_ACCESS_KEY_ID }}
        password: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        image_name: ${{ env.ecr_repository }}
        image_tag: workflow_lab_repo_${{ inputs.version }}
        push_git_tag: true
        registry: ${{ steps.login-ecr.outputs.registry }}
        dockerfile: wf_lab.Dockerfile

    - name: Uploading the Artifact
      uses: actions/upload-artifact@v3
      with:
        name: static-site
        path: /home/runner/work/gha-frontend/gha-frontend
        # path: $GITHUB_WORKSPACE

    outputs:
      tag-name: ${{ steps.increment-git-tag.outputs.git-tag }}
        

  publish:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
    - name: Downloading the Artifact.
      id: download
      uses: actions/download-artifact@v3
      with:
        name: static-site

    - name: Package Artifact
      uses: thedoctor0/zip-release@main
      with:
        filename: site.zip
    
    - name: Create a release.
      uses: release-drafter/release-drafter@master
      id: auto-release-notes
      env:
        GITHUB_TOKEN: ${{ secrets.WORKFLOW_ACCESS }}
      with:
        tag: "${{ inputs.version }}"
        publish: true
        prerelease: false
        config-name: release.yml

    - name: Dispatch Builds
      uses: peter-evans/repository-dispatch@v2
      with:
        token: ${{ secrets.WORKFLOW_ACCESS }}
        event-type: workflow_lab
        repository: zubyranks/gha-backend
        client-payload: '{"git-tag": "${{ inputs.version }}"}'
   
